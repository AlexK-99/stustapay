-- revision: c66cbafc
-- requires: 2a15b453

alter table payout_run drop column execution_date;


do
$$
    begin
        create type tse_type as enum ('diebold_nixdorf');
    exception
        when duplicate_object then null;
    end
$$;

alter table tse
    add column ws_url text not null default '';
alter table tse
    add column ws_timeout double precision default 5;
alter table tse
    add column password text not null default '';
alter table tse
    add column type tse_type not null default 'diebold_nixdorf';
alter table tse
    rename column tse_id to id;
alter table tse
    rename column tse_name to name;
alter table tse
    rename column tse_status to status;
alter table tse
    rename column tse_serial to serial;
alter table tse
    alter column serial set not null;
alter table tse
    rename column tse_hashalgo to hashalgo;
alter table tse
    rename column tse_time_format to time_format;
alter table tse
    rename column tse_public_key to public_key;
alter table tse
    rename column tse_certificate to certificate;
alter table tse
    rename column tse_process_data_encoding to process_data_encoding;
alter table user_tag
    rename column secret to secret_id;

-- this migration introduces tree structures for all records

create table event (
    id bigint primary key generated always as identity (start with 1000),
    currency_identifier varchar(255) not null,
    sumup_topup_enabled bool not null,
    max_account_balance numeric not null,

    -- previous values in settings / no other place to put them yet
    ust_id text not null,
    bon_issuer text not null,
    bon_address text not null,
    bon_title text not null,

    customer_portal_contact_email text not null,

    -- TODO: constraint other values to be set if sepa is enabled
    customer_portal_sepa_enabled bool not null,
    customer_portal_sepa_sender_name text,
    customer_portal_sepa_sender_iban text,
    customer_portal_sepa_description text,
    customer_portal_sepa_allowed_country_codes text[]
);

insert into event (
    id, currency_identifier, sumup_topup_enabled, max_account_balance, ust_id, bon_issuer, bon_address, bon_title,
    customer_portal_contact_email, customer_portal_sepa_enabled, customer_portal_sepa_sender_name, customer_portal_sepa_sender_iban,
    customer_portal_sepa_description, customer_portal_sepa_allowed_country_codes
) overriding system value
select
    0,
    (select value from config where key = 'currency.identifier'),
    (select value = 'true' from config where key = 'sumup_topup.enabled'),
    (select value::numeric from config where key = 'max_account_balance'),
    (select value from config where key = 'ust_id'),
    (select value from config where key = 'bon.issuer'),
    (select value from config where key = 'bon.addr'),
    (select value from config where key = 'bon.title'),
    (select value from config where key = 'customer_portal.contact_email'),
    true, -- sepa enabled
    (select value from config where key = 'customer_portal.sepa.sender_name'),
    (select value from config where key = 'customer_portal.sepa.sender_iban'),
    (select value from config where key = 'customer_portal.sepa.description'),
    (select array(select json_array_elements_text(value::json)) from config where key = 'customer_portal.sepa.allowed_country_codes');

-- we no longer need the hard coded entries in config table, all configuration has been made event specific
delete from config; -- TODO: debate if we need the table at all -> now it is empty

-- one tree node, references exactly one parent
create table node (
    id bigint primary key generated always as identity (start with 1000),
    parent bigint not null references node(id),

    name text not null,
    description text not null default '',
    event_id bigint references event(id) unique,  -- TODO: constraint that events cannot be nested
    -- generated by trigger, will never be null, we cannot constrain this to be not null directly as not null constraints are checked before triggers
    path text,
    -- generated by trigger, will never be null, we cannot constrain this to be not null directly as not null constraints are checked before triggers
    parent_ids bigint[]
);

create table tree_object_type (
    name varchar(255) primary key
);

insert into tree_object_type (name)
values
('user'), ('user_role'), ('product'), ('ticket'), ('till'), ('account'), ('order'), ('user_tags'), ('tax_rate'), ('tse');

create table allowed_objects_at_node (
    object_name varchar(255) not null references tree_object_type(name),
    node_id bigint not null references node(id),
    primary key (object_name, node_id)
);

create table allowed_objects_in_subtree_at_node (
    object_name varchar(255) not null references tree_object_type(name),
    node_id bigint not null references node(id),
    primary key (object_name, node_id)
);

create index on node (parent);

-- create default nodes, we can use a bulk insert here as no trigger has yet been loaded,
-- which also means we need to manually compute the parent ids and path
insert into node (
    id, parent, event_id, name, parent_ids, path
) overriding system value
values
    (0, 0, null, 'root', '{0}', '/0'),
    (1, 0, 0, 'event', '{0}', '/0/1')
    on conflict do nothing;

insert into allowed_objects_at_node (node_id, object_name)
values
(0, 'user'),
(0, 'user_role'),
(1, 'user'),
(1, 'user_role'),
(1, 'product'),
(1, 'ticket'),
(1, 'till'),
(1, 'account'),
(1, 'order'),
(1, 'user_tags'),
(1, 'tax_rate'),
(1, 'tse');

insert into allowed_objects_in_subtree_at_node (node_id, object_name)
values
(0, 'user'),
(0, 'user_role'),
(0, 'product'),
(0, 'ticket'),
(0, 'till'),
(0, 'account'),
(0, 'order'),
(0, 'user_tags'),
(0, 'tax_rate'),
(0, 'tse'),
(1, 'user'),
(1, 'user_role'),
(1, 'product'),
(1, 'ticket'),
(1, 'till'),
(1, 'account'),
(1, 'order'),
(1, 'user_tags'),
(1, 'tax_rate'),
(1, 'tse');

-- add the node column to all elements in the tree, and reference the 'event' node.
alter table account add column node_id bigint not null references node(id) default 1;
alter table account alter column node_id drop default;

-- references an order
-- alter table bon add column node_id bigint not null references node(id) default 1;
-- alter table bon alter column node_id drop default;

alter table cash_register add column node_id bigint not null references node(id) default 1;
alter table cash_register alter column node_id drop default;

alter table cash_register_stocking add column node_id bigint not null references node(id) default 1;
alter table cash_register_stocking alter column node_id drop default;

-- probably not needed since cashier shift always references a cashier which is inside the tree
-- alter table cashier_shift add column node_id bigint not null references node(id) default 1;
-- alter table cashier_shift alter column node_id drop default;

alter table config add column node_id bigint not null references node(id) default 1;
alter table config alter column node_id drop default;

-- probably not needed since it references a customer_account which is inside the tree
-- alter table customer_info add column node_id bigint not null references node(id) default 1;
-- alter table customer_info alter column node_id drop default;

alter table payout_run add column node_id bigint not null references node(id) default 1;
alter table payout_run alter column node_id drop default;

alter table product add column node_id bigint not null references node(id) default 1;
alter table product alter column node_id drop default;

alter table restriction_type add column node_id bigint not null references node(id) default 1;
alter table restriction_type alter column node_id drop default;

alter table tax add column node_id bigint not null references node(id) default 1;
alter table tax alter column node_id drop default;

alter table ticket add column node_id bigint not null references node(id) default 1;
alter table ticket alter column node_id drop default;

alter table till add column node_id bigint not null references node(id) default 1;
alter table till alter column node_id drop default;

alter table till_button add column node_id bigint not null references node(id) default 1;
alter table till_button alter column node_id drop default;

alter table till_layout add column node_id bigint not null references node(id) default 1;
alter table till_layout alter column node_id drop default;

alter table till_profile add column node_id bigint not null references node(id) default 1;
alter table till_profile alter column node_id drop default;

alter table tse add column node_id bigint not null references node(id) default 1;
alter table tse alter column node_id drop default;

alter table user_role add column node_id bigint not null references node(id) default 1;
alter table user_role alter column node_id drop default;

alter table user_tag add column node_id bigint not null references node(id) default 1;
alter table user_tag alter column node_id drop default;

alter table user_tag_secret add column node_id bigint not null references node(id) default 1;
alter table user_tag_secret alter column node_id drop default;

alter table usr add column node_id bigint not null references node(id) default 1;
alter table usr alter column node_id drop default;


-- TODO assign the associated event node to: ordr, transaction, line_item
-- TODO store the next id for orders in an event to increment them continuously
-- TODO: where do we put the hard coded products????????
