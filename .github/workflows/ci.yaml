name: Tests
on:
  push:
    branches: [ "master" ]
  pull_request:

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        run: python -m pip install -e '.[dev,test]'
      - name: Analysing the code with pylint
        run: make pylint

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        run: python -m pip install -e '.[dev,test]'
      - name: Analysing the code with mypy
        run: make mypy

  py-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.11 ]
        os: [ ubuntu-latest ]
        postgres-version: [ 13-bullseye ]
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_PASSWORD: "password"
          POSTGRES_USER: "stustapay"
          POSTGRES_DB: "stustapay-test"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      TEST_DB_USER: "stustapay"
      TEST_DB_HOST: "localhost"
      TEST_DB_PORT: "5432"
      TEST_DB_DATABASE: "stustapay-test"
      TEST_DB_PASSWORD: "password"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev,test]'
      - name: Run all tests except ones that require latex to be installed
        run: pytest stustapay/tests --doctest-modules --junitxml=junit/test-results.xml --cov=stustapay --cov-report=xml --cov-report=html

  py-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        run: python -m pip install -e '.[dev]'
      - name: Check formatting
        run: make check-format

  web-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./web
      - name: Lint
        run: npx nx run-many --target=lint
        working-directory: ./web

  web-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./web
      - name: Build
        run: npx nx run-many --target=build
        working-directory: ./web

  web-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./web
      - name: Build
        run: npx nx run-many --target=test
        working-directory: ./web

  app-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: get java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: build with gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble
          build-root-directory: app/
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app debug build
          # release variant: ./app/app/build/outputs/apk/release/app-release-unsigned.apk
          path: ./app/app/build/outputs/apk/debug/app-debug.apk

  app-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: get java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: test with gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          build-root-directory: app/

      - name: lint with gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: lint
          build-root-directory: app/

      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: app lint-report
          path: ./app/app/build/reports/lint-results-debug.html
